        -:    0:Source:C:/Users/esipo/CLionProjects/OOP/lab2/HTML_Decode/cmake-build-debug-coverage/_deps/googletest-src/googletest/src/gtest-matchers.cc
        -:    0:Graph:C:\Users\esipo\CLionProjects\OOP\lab2\HTML_Decode\cmake-build-debug-coverage\_deps\googletest-build\googletest\CMakeFiles\gtest.dir\src\gtest-all.cc.gcno
        -:    0:Data:C:\Users\esipo\CLionProjects\OOP\lab2\HTML_Decode\cmake-build-debug-coverage\_deps\googletest-build\googletest\CMakeFiles\gtest.dir\src\gtest-all.cc.gcda
        -:    0:Runs:1
        -:    1:// Copyright 2007, Google Inc.
        -:    2:// All rights reserved.
        -:    3://
        -:    4:// Redistribution and use in source and binary forms, with or without
        -:    5:// modification, are permitted provided that the following conditions are
        -:    6:// met:
        -:    7://
        -:    8://     * Redistributions of source code must retain the above copyright
        -:    9:// notice, this list of conditions and the following disclaimer.
        -:   10://     * Redistributions in binary form must reproduce the above
        -:   11:// copyright notice, this list of conditions and the following disclaimer
        -:   12:// in the documentation and/or other materials provided with the
        -:   13:// distribution.
        -:   14://     * Neither the name of Google Inc. nor the names of its
        -:   15:// contributors may be used to endorse or promote products derived from
        -:   16:// this software without specific prior written permission.
        -:   17://
        -:   18:// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
        -:   19:// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
        -:   20:// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
        -:   21:// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
        -:   22:// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        -:   23:// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
        -:   24:// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
        -:   25:// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
        -:   26:// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
        -:   27:// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        -:   28:// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        -:   29:
        -:   30:// The Google C++ Testing and Mocking Framework (Google Test)
        -:   31://
        -:   32:// This file implements just enough of the matcher interface to allow
        -:   33:// EXPECT_DEATH and friends to accept a matcher argument.
        -:   34:
        -:   35:#include "gtest/gtest-matchers.h"
        -:   36:
        -:   37:#include <string>
        -:   38:
        -:   39:#include "gtest/internal/gtest-internal.h"
        -:   40:#include "gtest/internal/gtest-port.h"
        -:   41:
        -:   42:namespace testing {
        -:   43:
        -:   44:// Constructs a matcher that matches a const std::string& whose value is
        -:   45:// equal to s.
function _ZN7testing7MatcherIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ES8_ called 0 returned 0% blocks executed 0%
    #####:   46:Matcher<const std::string&>::Matcher(const std::string& s) { *this = Eq(s); }
    %%%%%:   46-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   46-block 5
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:   46-block 6
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:   46-block 7
call    9 never executed
call   10 never executed
call   11 never executed
    $$$$$:   46-block 17
call   12 never executed
        -:   47:
        -:   48:// Constructs a matcher that matches a const std::string& whose value is
        -:   49:// equal to s.
function _ZN7testing7MatcherIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2EPKc called 0 returned 0% blocks executed 0%
    #####:   50:Matcher<const std::string&>::Matcher(const char* s) {
    %%%%%:   50-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   51:  *this = Eq(std::string(s));
    %%%%%:   51-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   51-block 5
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:   51-block 6
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:   51-block 7
call    9 never executed
call   10 never executed
call   11 never executed
    #####:   52:}
    $$$$$:   52-block 17
call    0 never executed
        -:   53:
        -:   54:// Constructs a matcher that matches a std::string whose value is equal to
        -:   55:// s.
function _ZN7testing7MatcherINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS6_ called 0 returned 0% blocks executed 0%
    #####:   56:Matcher<std::string>::Matcher(const std::string& s) { *this = Eq(s); }
    %%%%%:   56-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   56-block 5
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:   56-block 6
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:   56-block 7
call    9 never executed
call   10 never executed
call   11 never executed
    $$$$$:   56-block 17
call   12 never executed
        -:   57:
        -:   58:// Constructs a matcher that matches a std::string whose value is equal to
        -:   59:// s.
function _ZN7testing7MatcherINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2EPKc called 0 returned 0% blocks executed 0%
    #####:   60:Matcher<std::string>::Matcher(const char* s) { *this = Eq(std::string(s)); }
    %%%%%:   60-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   60-block 5
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:   60-block 6
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:   60-block 7
call    9 never executed
call   10 never executed
call   11 never executed
    $$$$$:   60-block 17
call   12 never executed
        -:   61:
        -:   62:#if GTEST_INTERNAL_HAS_STRING_VIEW
        -:   63:// Constructs a matcher that matches a const StringView& whose value is
        -:   64:// equal to s.
function _ZN7testing7MatcherIRKSt17basic_string_viewIcSt11char_traitsIcEEEC2ERKNSt7__cxx1112basic_stringIcS3_SaIcEEE called 0 returned 0% blocks executed 0%
    #####:   65:Matcher<const internal::StringView&>::Matcher(const std::string& s) {
    %%%%%:   65-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   66:  *this = Eq(s);
    %%%%%:   66-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   66-block 5
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:   66-block 6
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:   66-block 7
call    9 never executed
call   10 never executed
call   11 never executed
    #####:   67:}
    $$$$$:   67-block 17
call    0 never executed
        -:   68:
        -:   69:// Constructs a matcher that matches a const StringView& whose value is
        -:   70:// equal to s.
function _ZN7testing7MatcherIRKSt17basic_string_viewIcSt11char_traitsIcEEEC2EPKc called 0 returned 0% blocks executed 0%
    #####:   71:Matcher<const internal::StringView&>::Matcher(const char* s) {
    %%%%%:   71-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   72:  *this = Eq(std::string(s));
    %%%%%:   72-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   72-block 5
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:   72-block 6
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:   72-block 7
call    9 never executed
call   10 never executed
call   11 never executed
    #####:   73:}
    $$$$$:   73-block 17
call    0 never executed
        -:   74:
        -:   75:// Constructs a matcher that matches a const StringView& whose value is
        -:   76:// equal to s.
function _ZN7testing7MatcherIRKSt17basic_string_viewIcSt11char_traitsIcEEEC2ES4_ called 0 returned 0% blocks executed 0%
    #####:   77:Matcher<const internal::StringView&>::Matcher(internal::StringView s) {
    %%%%%:   77-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   78:  *this = Eq(std::string(s));
    %%%%%:   78-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   78-block 4
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:   78-block 6
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:   78-block 7
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed (throw)
    %%%%%:   78-block 8
call   12 never executed
call   13 never executed
call   14 never executed
    #####:   79:}
    $$$$$:   79-block 18
call    0 never executed
        -:   80:
        -:   81:// Constructs a matcher that matches a StringView whose value is equal to
        -:   82:// s.
function _ZN7testing7MatcherISt17basic_string_viewIcSt11char_traitsIcEEEC2ERKNSt7__cxx1112basic_stringIcS3_SaIcEEE called 0 returned 0% blocks executed 0%
    #####:   83:Matcher<internal::StringView>::Matcher(const std::string& s) { *this = Eq(s); }
    %%%%%:   83-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   83-block 5
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:   83-block 6
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:   83-block 7
call    9 never executed
call   10 never executed
call   11 never executed
    $$$$$:   83-block 17
call   12 never executed
        -:   84:
        -:   85:// Constructs a matcher that matches a StringView whose value is equal to
        -:   86:// s.
function _ZN7testing7MatcherISt17basic_string_viewIcSt11char_traitsIcEEEC2EPKc called 0 returned 0% blocks executed 0%
    #####:   87:Matcher<internal::StringView>::Matcher(const char* s) {
    %%%%%:   87-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   88:  *this = Eq(std::string(s));
    %%%%%:   88-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   88-block 5
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:   88-block 6
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:   88-block 7
call    9 never executed
call   10 never executed
call   11 never executed
    #####:   89:}
    $$$$$:   89-block 17
call    0 never executed
        -:   90:
        -:   91:// Constructs a matcher that matches a StringView whose value is equal to
        -:   92:// s.
function _ZN7testing7MatcherISt17basic_string_viewIcSt11char_traitsIcEEEC2ES4_ called 0 returned 0% blocks executed 0%
    #####:   93:Matcher<internal::StringView>::Matcher(internal::StringView s) {
    %%%%%:   93-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   94:  *this = Eq(std::string(s));
    %%%%%:   94-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   94-block 4
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:   94-block 6
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:   94-block 7
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed (throw)
    %%%%%:   94-block 8
call   12 never executed
call   13 never executed
call   14 never executed
    #####:   95:}
    $$$$$:   95-block 18
call    0 never executed
        -:   96:#endif  // GTEST_INTERNAL_HAS_STRING_VIEW
        -:   97:
        -:   98:}  // namespace testing
